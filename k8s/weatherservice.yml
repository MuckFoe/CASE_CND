apiVersion: apps/v1
kind: Deployment

metadata:
  name: caseweatherservice
  labels:
    app: caseweatherservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: caseweatherservice
  template:
    metadata:
      labels:
        app: caseweatherservice
    spec:
      containers:
        - name: caseweatherservice
          image: moritzzeitler/case:caseweatherservice
          ports:
            - containerPort: 50505
          resources:
            limits:
              memory: "200Mi"
              cpu: "100m"
          env:
            - name: FLASK_APP
              valueFrom:
                configMapKeyRef:
                  name: case-config
                  key: FLASK_APP
            - name: FLASK_RUN_HOST
              valueFrom:
                configMapKeyRef:
                  name: case-config
                  key: FLASK_RUN_HOST
            - name: FLASK_RUN_PORT
              valueFrom:
                configMapKeyRef:
                  name: case-config
                  key: FLASK_RUN_PORT
            - name: CONFIG_PATH_WEATHER_SERVICE
              valueFrom:
                configMapKeyRef:
                  name: case-config
                  key: CONFIG_PATH_WEATHER_SERVICE
            - name: OPEN_WEATHER_API_KEY
              valueFrom:
                configMapKeyRef:
                  name: case-config
                  key: OPEN_WEATHER_API_KEY
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: caseweatherservice
  labels:
    app: caseweatherservice
spec:
  selector:
    app: caseweatherservice
  ports:
    - port: 50505
      protocol: TCP
      targetPort: 50505
  type: ClusterIP
